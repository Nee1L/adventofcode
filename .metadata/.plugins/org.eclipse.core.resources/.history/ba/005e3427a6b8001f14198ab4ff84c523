package adventofcode2;

import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;

public class DaySix {
	private static void printArray(List<List<String>> arr, int y, int x, String guard) {
		for (int i = 0; i < arr.size(); i++) {
			for (int j = 0; j < arr.get(i).size(); j++) {
//				if (y == i && x == j) {
//					System.out.print(guard);
//					continue;
//				}
				System.out.print(arr.get(i).get(j) + "");
			}
			System.out.println();
		}
		System.out.println();
		System.out.println();
	}

	private static boolean isLoopPossible(List<List<String>> arr, int x, int y, String guard) {
		int i = y;
		int j = x;
		boolean bebra = true;
		while (bebra) {
			switch(guard) {
			case "^":
				j++;
				if(j>=arr.get(i).size()) {
					bebra = false;
					break;
				}
				if(arr.get(i).get(j).equals("e") || arr.get(i).get(j).equals("E")) {
					return true;
				}
			}
		}
		return false;
	}
	private static void partTwo(List<List<String>> arr, int x, int y) {
		int i = y;
		int j = x;
		// arr.get(i).set(j, "X");
		int counter = 1;
		String guard = "^";
		boolean end = false;
		while (!end) {
			switch (guard) {
			case "^":
				i--;
				if ((arr.get(i).get(j).equals("-") || arr.get(i).get(j).equals("+"))
						&& !arr.get(i).get(j).equals("^")) {
					counter++;
					arr.get(i).get(j).join("E");
				} else {
					if (!arr.get(i).get(j).equals("^")) {
						arr.get(i).set(j, "N");
					}
				}
				if (i <= 0) {
					end = true;
					break;
				}
				if (arr.get(i - 1).get(j).equals("#")) {
					guard = ">";
					if (!arr.get(i).get(j).equals("^")) {
						arr.get(i).set(j, "n");
					}
					printArray(arr, i, j, guard);
				}
				break;
			case ">":
				j++;
				if ((arr.get(i).get(j).equals("|") || arr.get(i).get(j).equals("+"))
						&& !arr.get(i).get(j).equals("^")) {
					counter++;
					arr.get(i).set(j, "e");
				} else {
					if (!arr.get(i).get(j).equals("^")) {
						arr.get(i).set(j, "E");
					}
				}
				if (j >= arr.get(i).size() - 1) {
					end = true;
					break;
				}
				if (arr.get(i).get(j + 1).equals("#")) {
					guard = "v";
					if (!arr.get(i).get(j).equals("^")) {
						arr.get(i).set(j, "e");
					}
					printArray(arr, i, j, guard);
				}
				break;
			case "v":
				i++;
				if ((arr.get(i).get(j).equals("-") || arr.get(i).get(j).equals("+"))
						&& !arr.get(i).get(j).equals("^")) {
					counter++;
					arr.get(i).set(j, "s");
				} else {
					if (!arr.get(i).get(j).equals("^")) {
						arr.get(i).set(j, "S");
					}
				}
				if (i >= arr.size() - 1) {
					end = true;
					break;
				}
				if (arr.get(i + 1).get(j).equals("#")) {
					guard = "<";
					if (!arr.get(i).get(j).equals("^")) {
						arr.get(i).set(j, "s");
					}
					printArray(arr, i, j, guard);
				}
				break;
			case "<":
				j--;
				if ((arr.get(i).get(j).equals("|") || arr.get(i).get(j).equals("+"))
						&& !arr.get(i).get(j).equals("^")) {
					counter++;
					arr.get(i).set(j, "w");
				} else {
					if (!arr.get(i).get(j).equals("^")) {
						arr.get(i).set(j, "W");
					}
				}
				if (j <= 0) {
					end = true;
					break;
				}
				if (arr.get(i).get(j - 1).equals("#")) {
					guard = "^";
					if (!arr.get(i).get(j).equals("^")) {
						arr.get(i).set(j, "w");
					}
					printArray(arr, i, j, guard);
				}
				break;
			}
		}
		System.out.println(counter);
	}

	private static void partOne(List<List<String>> arr, int x, int y) {
		int i = y;
		int j = x;
		arr.get(i).set(j, "X");
		int counter = 1;
		String guard = "^";
		boolean end = false;
		while (!end) {
			switch (guard) {
			case "^":
				i--;
				if (!arr.get(i).get(j).equals("X")) {
					counter++;
					arr.get(i).set(j, "X");
				}
				if (i <= 0) {
					end = true;
					break;
				}
				if (arr.get(i - 1).get(j).equals("#")) {
					guard = ">";
					// arr.get(i).set(j, ">");
					printArray(arr, i, j, guard);
				}
				break;
			case ">":
				j++;
				if (!arr.get(i).get(j).equals("X")) {
					counter++;
					arr.get(i).set(j, "X");
				}
				if (j >= arr.get(i).size() - 1) {
					end = true;
					break;
				}
				if (arr.get(i).get(j + 1).equals("#")) {
					guard = "v";
					// arr.get(i).set(j, "v");
					printArray(arr, i, j, guard);
				}
				break;
			case "v":
				i++;
				if (!arr.get(i).get(j).equals("X")) {
					counter++;
					arr.get(i).set(j, "X");
				}
				if (i >= arr.size() - 1) {
					end = true;
					break;
				}
				if (arr.get(i + 1).get(j).equals("#")) {
					guard = "<";
					// arr.get(i).set(j, "<");
					printArray(arr, i, j, guard);
				}
				break;
			case "<":
				j--;
				if (!arr.get(i).get(j).equals("X")) {
					counter++;
					arr.get(i).set(j, "X");
				}
				if (j <= 0) {
					end = true;
					break;
				}
				if (arr.get(i).get(j - 1).equals("#")) {
					guard = "^";
					// arr.get(i).set(j, "^");
					printArray(arr, i, j, guard);
				}
				break;
			}
		}
		System.out.println(counter);
	}

	public static void readFile() {
		List<List<String>> arr = new ArrayList<>();
		int count = 0;
		int x = 0;
		int y = 0;
		try {
			File file = new File("D:\\workspaces\\adventofcode2\\adventofcode2\\src\\adventofcode2\\daysix.txt");
			Scanner scanner = new Scanner(file);
			while (scanner.hasNextLine()) {
				String data = scanner.nextLine();
				System.out.println(data);
				if (data.contains("^")) {
					y = count;
					x = data.indexOf("^");
				}
				count++;
				arr.add(Arrays.asList(data.split("")));
			}
			System.out.println("\n");
			partTwo(arr, x, y);
			scanner.close();
		} catch (FileNotFoundException e) {
			System.out.println("An error occurred.");
			e.printStackTrace();
		}
	}
}
